com/facebook/stetho/BuildConfig = Com.Facebook.Stetho.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/facebook/stetho/common/Accumulator = Com.Facebook.Stetho.Common.IAccumulator
  store(Ljava/lang/Object;)V = Store(Java.Lang.Object)
com/facebook/stetho/common/android/DialogFragmentAccessor = Com.Facebook.Stetho.Common.Android.IDialogFragmentAccessor
  getDialog(Ljava/lang/Object;)Landroid/app/Dialog; = GetDialog(Java.Lang.Object)
com/facebook/stetho/common/android/FragmentAccessor = Com.Facebook.Stetho.Common.Android.IFragmentAccessor
  NO_ID = NoId
  getChildFragmentManager(Ljava/lang/Object;)Ljava/lang/Object; = GetChildFragmentManager(Java.Lang.Object)
  getFragmentManager(Ljava/lang/Object;)Ljava/lang/Object; = GetFragmentManager(Java.Lang.Object)
  getId(Ljava/lang/Object;)I = GetId(Java.Lang.Object)
  getResources(Ljava/lang/Object;)Landroid/content/res/Resources; = GetResources(Java.Lang.Object)
  getTag(Ljava/lang/Object;)Ljava/lang/String; = GetTag(Java.Lang.Object)
  getView(Ljava/lang/Object;)Landroid/view/View; = GetView(Java.Lang.Object)
com/facebook/stetho/common/android/FragmentActivityAccessor = Com.Facebook.Stetho.Common.Android.IFragmentActivityAccessor
  getFragmentManager(Landroid/app/Activity;)Ljava/lang/Object; = GetFragmentManager(Java.Lang.Object)
com/facebook/stetho/common/android/FragmentCompat = Com.Facebook.Stetho.Common.Android.FragmentCompat
  getDialogFragmentClass()Ljava/lang/Class; = DialogFragmentClass
  getFragmentActivityClass()Ljava/lang/Class; = FragmentActivityClass
  getFragmentClass()Ljava/lang/Class; = FragmentClass
  getFrameworkInstance()Lcom/facebook/stetho/common/android/FragmentCompat; = FrameworkInstance
  getSupportLibInstance()Lcom/facebook/stetho/common/android/FragmentCompat; = SupportLibInstance
  forDialogFragment()Lcom/facebook/stetho/common/android/DialogFragmentAccessor; = ForDialogFragment()
  forFragment()Lcom/facebook/stetho/common/android/FragmentAccessor; = ForFragment()
  forFragmentActivity()Lcom/facebook/stetho/common/android/FragmentActivityAccessor; = ForFragmentActivity()
  forFragmentManager()Lcom/facebook/stetho/common/android/FragmentManagerAccessor; = ForFragmentManager()
com/facebook/stetho/common/android/FragmentCompatUtil = Com.Facebook.Stetho.Common.Android.FragmentCompatUtil
  findFragmentForView(Landroid/view/View;)Ljava/lang/Object; = FindFragmentForView(Android.Views.View)
  isDialogFragment(Ljava/lang/Object;)Z = IsDialogFragment(Java.Lang.Object)
com/facebook/stetho/common/android/FragmentManagerAccessor = Com.Facebook.Stetho.Common.Android.IFragmentManagerAccessor
  getAddedFragments(Ljava/lang/Object;)Ljava/util/List; = GetAddedFragments(Java.Lang.Object)
com/facebook/stetho/common/android/HandlerUtil = Com.Facebook.Stetho.Common.Android.HandlerUtil
  checkThreadAccess(Landroid/os/Handler;)Z = CheckThreadAccess(Android.OS.Handler)
  postAndWait(Landroid/os/Handler;Lcom/facebook/stetho/common/UncheckedCallable;)Ljava/lang/Object; = PostAndWait(Android.OS.Handler, Com.Facebook.Stetho.Common.IUncheckedCallable)
  postAndWait(Landroid/os/Handler;Ljava/lang/Runnable;)V = PostAndWait(Android.OS.Handler, Java.Lang.IRunnable)
  verifyThreadAccess(Landroid/os/Handler;)V = VerifyThreadAccess(Android.OS.Handler)
com/facebook/stetho/common/android/ResourcesUtil = Com.Facebook.Stetho.Common.Android.ResourcesUtil
  getIdString(Landroid/content/res/Resources;I)Ljava/lang/String; = GetIdString(Android.Content.Res.Resources, int)
  getIdStringQuietly(Ljava/lang/Object;Landroid/content/res/Resources;I)Ljava/lang/String; = GetIdStringQuietly(Java.Lang.Object, Android.Content.Res.Resources, int)
com/facebook/stetho/common/android/ViewGroupUtil = Com.Facebook.Stetho.Common.Android.ViewGroupUtil
  findChildIndex(Landroid/view/ViewGroup;Landroid/view/View;)I = FindChildIndex(Android.Views.ViewGroup, Android.Views.View)
com/facebook/stetho/common/android/ViewUtil = Com.Facebook.Stetho.Common.Android.ViewUtil
  hitTest(Landroid/view/View;FF)Landroid/view/View; = HitTest(Android.Views.View, float, float)
  hitTest(Landroid/view/View;FFLcom/facebook/stetho/common/Predicate;)Landroid/view/View; = HitTest(Android.Views.View, float, float, Com.Facebook.Stetho.Common.IPredicate)
  isTransformedPointInView(Landroid/view/ViewGroup;Landroid/view/View;FFLandroid/graphics/PointF;)Z = IsTransformedPointInView(Android.Views.ViewGroup, Android.Views.View, float, float, Android.Graphics.PointF)
  pointInView(Landroid/view/View;FF)Z = PointInView(Android.Views.View, float, float)
  tryGetActivity(Landroid/view/View;)Landroid/app/Activity; = TryGetActivity(Android.Views.View)
com/facebook/stetho/common/ArrayListAccumulator = Com.Facebook.Stetho.Common.ArrayListAccumulator
  <init>()V = .ctor()
  store(Ljava/lang/Object;)V = Store(Java.Lang.Object)
com/facebook/stetho/common/ExceptionUtil = Com.Facebook.Stetho.Common.ExceptionUtil
  <init>()V = .ctor()
  propagate(Ljava/lang/Throwable;)Ljava/lang/RuntimeException; = Propagate(Java.Lang.Throwable)
  propagateIfInstanceOf(Ljava/lang/Throwable;Ljava/lang/Class;)V = PropagateIfInstanceOf(Java.Lang.Throwable, Java.Lang.Class)
  sneakyThrow(Ljava/lang/Throwable;)V = SneakyThrow(Java.Lang.Throwable)
com/facebook/stetho/common/ListUtil = Com.Facebook.Stetho.Common.ListUtil
  copyToImmutableList(Ljava/util/List;)Ljava/util/List; = CopyToImmutableList(System.Collections.IList)
  identityEquals(Ljava/util/List;Ljava/util/List;)Z = IdentityEquals(System.Collections.IList, System.Collections.IList)
  newImmutableList(Ljava/lang/Object;)Ljava/util/List; = NewImmutableList(Java.Lang.Object)
  newImmutableList(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/List; = NewImmutableList(Java.Lang.Object, Java.Lang.Object)
com/facebook/stetho/common/LogRedirector = Com.Facebook.Stetho.Common.LogRedirector
  <init>()V = .ctor()
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = D(string, string, Java.Lang.Throwable)
  e(Ljava/lang/String;Ljava/lang/String;)V = E(string, string)
  e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = E(string, string, Java.Lang.Throwable)
  i(Ljava/lang/String;Ljava/lang/String;)V = I(string, string)
  i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = I(string, string, Java.Lang.Throwable)
  isLoggable(Ljava/lang/String;I)Z = IsLoggable(string, int)
  setLogger(Lcom/facebook/stetho/common/LogRedirector$Logger;)V = SetLogger(Com.Facebook.Stetho.Common.LogRedirector.ILogger)
  v(Ljava/lang/String;Ljava/lang/String;)V = V(string, string)
  v(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = V(string, string, Java.Lang.Throwable)
  w(Ljava/lang/String;Ljava/lang/String;)V = W(string, string)
  w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = W(string, string, Java.Lang.Throwable)
com/facebook/stetho/common/LogUtil = Com.Facebook.Stetho.Common.LogUtil
  <init>()V = .ctor()
  d(Ljava/lang/String;)V = D(string)
  d(Ljava/lang/String;[Ljava/lang/Object;)V = D(string, params Java.Lang.Object[])
  d(Ljava/lang/Throwable;Ljava/lang/String;)V = D(Java.Lang.Throwable, string)
  d(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = D(Java.Lang.Throwable, string, params Java.Lang.Object[])
  e(Ljava/lang/String;)V = E(string)
  e(Ljava/lang/String;[Ljava/lang/Object;)V = E(string, params Java.Lang.Object[])
  e(Ljava/lang/Throwable;Ljava/lang/String;)V = E(Java.Lang.Throwable, string)
  e(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = E(Java.Lang.Throwable, string, params Java.Lang.Object[])
  i(Ljava/lang/String;)V = I(string)
  i(Ljava/lang/String;[Ljava/lang/Object;)V = I(string, params Java.Lang.Object[])
  i(Ljava/lang/Throwable;Ljava/lang/String;)V = I(Java.Lang.Throwable, string)
  i(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = I(Java.Lang.Throwable, string, params Java.Lang.Object[])
  isLoggable(I)Z = IsLoggable(int)
  v(Ljava/lang/String;)V = V(string)
  v(Ljava/lang/String;[Ljava/lang/Object;)V = V(string, params Java.Lang.Object[])
  v(Ljava/lang/Throwable;Ljava/lang/String;)V = V(Java.Lang.Throwable, string)
  v(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = V(Java.Lang.Throwable, string, params Java.Lang.Object[])
  w(Ljava/lang/String;)V = W(string)
  w(Ljava/lang/String;[Ljava/lang/Object;)V = W(string, params Java.Lang.Object[])
  w(Ljava/lang/Throwable;Ljava/lang/String;)V = W(Java.Lang.Throwable, string)
  w(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = W(Java.Lang.Throwable, string, params Java.Lang.Object[])
com/facebook/stetho/common/Predicate = Com.Facebook.Stetho.Common.IPredicate
  apply(Ljava/lang/Object;)Z = Apply(Java.Lang.Object)
com/facebook/stetho/common/ProcessUtil = Com.Facebook.Stetho.Common.ProcessUtil
  <init>()V = .ctor()
  getProcessName()Ljava/lang/String; = ProcessName
com/facebook/stetho/common/ReflectionUtil = Com.Facebook.Stetho.Common.ReflectionUtil
  getFieldValue(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object; = GetFieldValue(Java.Lang.Reflect.Field, Java.Lang.Object)
  tryGetClassForName(Ljava/lang/String;)Ljava/lang/Class; = TryGetClassForName(string)
  tryGetDeclaredField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field; = TryGetDeclaredField(Java.Lang.Class, string)
com/facebook/stetho/common/StringUtil = Com.Facebook.Stetho.Common.StringUtil
  removePrefix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = RemovePrefix(string, string)
  removePrefix(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = RemovePrefix(string, string, string)
com/facebook/stetho/common/ThreadBound = Com.Facebook.Stetho.Common.IThreadBound
  checkThreadAccess()Z = CheckThreadAccess()
  postAndWait(Lcom/facebook/stetho/common/UncheckedCallable;)Ljava/lang/Object; = PostAndWait(Com.Facebook.Stetho.Common.IUncheckedCallable)
  postAndWait(Ljava/lang/Runnable;)V = PostAndWait(Java.Lang.IRunnable)
  postDelayed(Ljava/lang/Runnable;J)V = PostDelayed(Java.Lang.IRunnable, long)
  removeCallbacks(Ljava/lang/Runnable;)V = RemoveCallbacks(Java.Lang.IRunnable)
  verifyThreadAccess()V = VerifyThreadAccess()
com/facebook/stetho/common/UncheckedCallable = Com.Facebook.Stetho.Common.IUncheckedCallable
  call()Ljava/lang/Object; = Call()
com/facebook/stetho/common/Utf8Charset = Com.Facebook.Stetho.Common.Utf8Charset
  <init>()V = .ctor()
  INSTANCE = Instance
  NAME = Name
  decodeUTF8([B)Ljava/lang/String; = DecodeUTF8(byte[])
  encodeUTF8(Ljava/lang/String;)[B = EncodeUTF8(string)
com/facebook/stetho/common/Util = Com.Facebook.Stetho.Common.Util
  <init>()V = .ctor()
  awaitUninterruptibly(Ljava/util/concurrent/CountDownLatch;)V = AwaitUninterruptibly(Java.Util.Concurrent.CountDownLatch)
  close(Ljava/io/Closeable;Z)V = Close(Java.IO.ICloseable, bool)
  copy(Ljava/io/InputStream;Ljava/io/OutputStream;[B)V = Copy(System.IO.Stream, System.IO.Stream, byte[])
  getUninterruptibly(Ljava/util/concurrent/Future;)Ljava/lang/Object; = GetUninterruptibly(Java.Util.Concurrent.IFuture)
  getUninterruptibly(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object; = GetUninterruptibly(Java.Util.Concurrent.IFuture, long, Java.Util.Concurrent.TimeUnit)
  joinUninterruptibly(Ljava/lang/Thread;)V = JoinUninterruptibly(Java.Lang.Thread)
  readAsUTF8(Ljava/io/InputStream;)Ljava/lang/String; = ReadAsUTF8(System.IO.Stream)
  sleepUninterruptibly(J)V = SleepUninterruptibly(long)
  throwIf(Z)V = ThrowIf(bool)
  throwIfNot(Z)V = ThrowIfNot(bool)
  throwIfNot(ZLjava/lang/String;[Ljava/lang/Object;)V = ThrowIfNot(bool, string, params Java.Lang.Object[])
  throwIfNotNull(Ljava/lang/Object;)V = ThrowIfNotNull(Java.Lang.Object)
  throwIfNull(Ljava/lang/Object;)Ljava/lang/Object; = ThrowIfNull(Java.Lang.Object)
  throwIfNull(Ljava/lang/Object;Ljava/lang/Object;)V = ThrowIfNull(Java.Lang.Object, Java.Lang.Object)
  throwIfNull(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V = ThrowIfNull(Java.Lang.Object, Java.Lang.Object, Java.Lang.Object)
com/facebook/stetho/dumpapp/ArgsHelper = Com.Facebook.Stetho.Dumpapp.ArgsHelper
  <init>()V = .ctor()
  drainToArray(Ljava/util/Iterator;)[Ljava/lang/String; = DrainToArray(Java.Util.IIterator)
  nextArg(Ljava/util/Iterator;Ljava/lang/String;)Ljava/lang/String; = NextArg(Java.Util.IIterator, string)
  nextOptionalArg(Ljava/util/Iterator;Ljava/lang/String;)Ljava/lang/String; = NextOptionalArg(Java.Util.IIterator, string)
com/facebook/stetho/dumpapp/DumpappHttpSocketLikeHandler = Com.Facebook.Stetho.Dumpapp.DumpappHttpSocketLikeHandler
  onAccepted(Lcom/facebook/stetho/server/SocketLike;)V = OnAccepted(Com.Facebook.Stetho.Server.SocketLike)
com/facebook/stetho/dumpapp/DumpappSocketLikeHandler = Com.Facebook.Stetho.Dumpapp.DumpappSocketLikeHandler
  PROTOCOL_MAGIC = ProtocolMagic
  PROTOCOL_VERSION = ProtocolVersion
  onAccepted(Lcom/facebook/stetho/server/SocketLike;)V = OnAccepted(Com.Facebook.Stetho.Server.SocketLike)
com/facebook/stetho/dumpapp/DumpException = Com.Facebook.Stetho.Dumpapp.DumpException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/facebook/stetho/dumpapp/DumpUsageException = Com.Facebook.Stetho.Dumpapp.DumpUsageException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/facebook/stetho/dumpapp/GlobalOptions = Com.Facebook.Stetho.Dumpapp.GlobalOptions
  <init>()V = .ctor()
com/facebook/stetho/dumpapp/plugins/CrashDumperPlugin = Com.Facebook.Stetho.Dumpapp.Plugins.CrashDumperPlugin
  <init>()V = .ctor()
  getName()Ljava/lang/String; = Name
com/facebook/stetho/dumpapp/plugins/FilesDumperPlugin = Com.Facebook.Stetho.Dumpapp.Plugins.FilesDumperPlugin
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getName()Ljava/lang/String; = Name
com/facebook/stetho/dumpapp/plugins/HprofDumperPlugin = Com.Facebook.Stetho.Dumpapp.Plugins.HprofDumperPlugin
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getName()Ljava/lang/String; = Name
com/facebook/stetho/dumpapp/plugins/SharedPreferencesDumperPlugin = Com.Facebook.Stetho.Dumpapp.Plugins.SharedPreferencesDumperPlugin
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getName()Ljava/lang/String; = Name
com/facebook/stetho/DumperPluginsProvider = Com.Facebook.Stetho.IDumperPluginsProvider
  get()Ljava/lang/Iterable; = Get()
com/facebook/stetho/inspector/ChromeDevtoolsServer = Com.Facebook.Stetho.Inspector.ChromeDevtoolsServer
  <init>(Ljava/lang/Iterable;)V = .ctor(Java.Lang.IIterable)
  PATH = Path
  onClose(Lcom/facebook/stetho/websocket/SimpleSession;ILjava/lang/String;)V = OnClose(Com.Facebook.Stetho.Websocket.ISimpleSession, int, string)
  onError(Lcom/facebook/stetho/websocket/SimpleSession;Ljava/lang/Throwable;)V = OnError(Com.Facebook.Stetho.Websocket.ISimpleSession, Java.Lang.Throwable)
  onMessage(Lcom/facebook/stetho/websocket/SimpleSession;[BI)V = OnMessage(Com.Facebook.Stetho.Websocket.ISimpleSession, byte[], int)
  onMessage(Lcom/facebook/stetho/websocket/SimpleSession;Ljava/lang/String;)V = OnMessage(Com.Facebook.Stetho.Websocket.ISimpleSession, string)
  onOpen(Lcom/facebook/stetho/websocket/SimpleSession;)V = OnOpen(Com.Facebook.Stetho.Websocket.ISimpleSession)
com/facebook/stetho/inspector/ChromeDiscoveryHandler = Com.Facebook.Stetho.Inspector.ChromeDiscoveryHandler
  <init>(Landroid/content/Context;Ljava/lang/String;)V = .ctor(Android.Content.Context, string)
  handleRequest(Lcom/facebook/stetho/server/SocketLike;Lcom/facebook/stetho/server/http/LightHttpRequest;Lcom/facebook/stetho/server/http/LightHttpResponse;)Z = HandleRequest(Com.Facebook.Stetho.Server.SocketLike, Com.Facebook.Stetho.Server.Http.LightHttpRequest, Com.Facebook.Stetho.Server.Http.LightHttpResponse)
  register(Lcom/facebook/stetho/server/http/HandlerRegistry;)V = Register(Com.Facebook.Stetho.Server.Http.HandlerRegistry)
com/facebook/stetho/inspector/console/CLog = Com.Facebook.Stetho.Inspector.Console.CLog
  <init>()V = .ctor()
  writeToConsole(Lcom/facebook/stetho/inspector/helper/ChromePeerManager;Lcom/facebook/stetho/inspector/protocol/module/Console$MessageLevel;Lcom/facebook/stetho/inspector/protocol/module/Console$MessageSource;Ljava/lang/String;)V = WriteToConsole(Com.Facebook.Stetho.Inspector.Helper.ChromePeerManager, Com.Facebook.Stetho.Inspector.Protocol.Module.Console.MessageLevel, Com.Facebook.Stetho.Inspector.Protocol.Module.Console.MessageSource, string)
  writeToConsole(Lcom/facebook/stetho/inspector/protocol/module/Console$MessageLevel;Lcom/facebook/stetho/inspector/protocol/module/Console$MessageSource;Ljava/lang/String;)V = WriteToConsole(Com.Facebook.Stetho.Inspector.Protocol.Module.Console.MessageLevel, Com.Facebook.Stetho.Inspector.Protocol.Module.Console.MessageSource, string)
com/facebook/stetho/inspector/console/ConsolePeerManager = Com.Facebook.Stetho.Inspector.Console.ConsolePeerManager
  getInstanceOrNull()Lcom/facebook/stetho/inspector/console/ConsolePeerManager; = InstanceOrNull
  getOrCreateInstance()Lcom/facebook/stetho/inspector/console/ConsolePeerManager; = OrCreateInstance
com/facebook/stetho/inspector/console/RuntimeRepl = Com.Facebook.Stetho.Inspector.Console.IRuntimeRepl
  evaluate(Ljava/lang/String;)Ljava/lang/Object; = Evaluate(string)
com/facebook/stetho/inspector/console/RuntimeReplFactory = Com.Facebook.Stetho.Inspector.Console.IRuntimeReplFactory
  newInstance()Lcom/facebook/stetho/inspector/console/RuntimeRepl; = NewInstance()
com/facebook/stetho/inspector/database/ContentProviderDatabaseDriver = Com.Facebook.Stetho.Inspector.Database.ContentProviderDatabaseDriver
  <init>(Landroid/content/Context;[Lcom/facebook/stetho/inspector/database/ContentProviderSchema;)V = .ctor(Android.Content.Context, params Com.Facebook.Stetho.Inspector.Database.ContentProviderSchema[])
  getDatabaseNames()Ljava/util/List; = DatabaseNames
  executeSQL(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/stetho/inspector/protocol/module/Database$DatabaseDriver$ExecuteResultHandler;)Lcom/facebook/stetho/inspector/protocol/module/Database$ExecuteSQLResponse; = ExecuteSQL(string, string, Com.Facebook.Stetho.Inspector.Protocol.Module.Database.DatabaseDriver.IExecuteResultHandler)
  getTableNames(Ljava/lang/String;)Ljava/util/List; = GetTableNames(string)
com/facebook/stetho/inspector/database/ContentProviderSchema = Com.Facebook.Stetho.Inspector.Database.ContentProviderSchema
  getTableName()Ljava/lang/String; = TableName
  getUri()Landroid/net/Uri; = Uri
  getProjection()[Ljava/lang/String; = GetProjection()
com/facebook/stetho/inspector/database/DatabaseConnectionProvider = Com.Facebook.Stetho.Inspector.Database.IDatabaseConnectionProvider
  openDatabase(Ljava/io/File;)Landroid/database/sqlite/SQLiteDatabase; = OpenDatabase(Java.IO.File)
com/facebook/stetho/inspector/database/DatabaseFilesProvider = Com.Facebook.Stetho.Inspector.Database.IDatabaseFilesProvider
  getDatabaseFiles()Ljava/util/List; = DatabaseFiles
com/facebook/stetho/inspector/database/DefaultDatabaseConnectionProvider = Com.Facebook.Stetho.Inspector.Database.DefaultDatabaseConnectionProvider
  <init>()V = .ctor()
  determineOpenOptions(Ljava/io/File;)I = DetermineOpenOptions(Java.IO.File)
  openDatabase(Ljava/io/File;)Landroid/database/sqlite/SQLiteDatabase; = OpenDatabase(Java.IO.File)
  performOpen(Ljava/io/File;I)Landroid/database/sqlite/SQLiteDatabase; = PerformOpen(Java.IO.File, int)
com/facebook/stetho/inspector/database/DefaultDatabaseFilesProvider = Com.Facebook.Stetho.Inspector.Database.DefaultDatabaseFilesProvider
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getDatabaseFiles()Ljava/util/List; = DatabaseFiles
com/facebook/stetho/inspector/database/SQLiteDatabaseCompat = Com.Facebook.Stetho.Inspector.Database.SQLiteDatabaseCompat
  <init>()V = .ctor()
  ENABLE_FOREIGN_KEY_CONSTRAINTS = EnableForeignKeyConstraints
  ENABLE_WRITE_AHEAD_LOGGING = EnableWriteAheadLogging
  getInstance()Lcom/facebook/stetho/inspector/database/SQLiteDatabaseCompat; = Instance
  enableFeatures(ILandroid/database/sqlite/SQLiteDatabase;)V = EnableFeatures(int, Android.Database.Sqlite.SQLiteDatabase)
  provideOpenFlags(I)I = ProvideOpenFlags(int)
com/facebook/stetho/inspector/database/SqliteDatabaseDriver = Com.Facebook.Stetho.Inspector.Database.SqliteDatabaseDriver
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Lcom/facebook/stetho/inspector/database/DatabaseFilesProvider;Lcom/facebook/stetho/inspector/database/DatabaseConnectionProvider;)V = .ctor(Android.Content.Context, Com.Facebook.Stetho.Inspector.Database.IDatabaseFilesProvider, Com.Facebook.Stetho.Inspector.Database.IDatabaseConnectionProvider)
  getDatabaseNames()Ljava/util/List; = DatabaseNames
  executeSQL(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/stetho/inspector/protocol/module/Database$DatabaseDriver$ExecuteResultHandler;)Lcom/facebook/stetho/inspector/protocol/module/Database$ExecuteSQLResponse; = ExecuteSQL(string, string, Com.Facebook.Stetho.Inspector.Protocol.Module.Database.DatabaseDriver.IExecuteResultHandler)
  getTableNames(Ljava/lang/String;)Ljava/util/List; = GetTableNames(string)
com/facebook/stetho/inspector/DevtoolsSocketHandler = Com.Facebook.Stetho.Inspector.DevtoolsSocketHandler
  <init>(Landroid/content/Context;Ljava/lang/Iterable;)V = .ctor(Android.Content.Context, Java.Lang.IIterable)
  onAccepted(Lcom/facebook/stetho/server/SocketLike;)V = OnAccepted(Com.Facebook.Stetho.Server.SocketLike)
com/facebook/stetho/inspector/domstorage/DOMStoragePeerManager = Com.Facebook.Stetho.Inspector.Domstorage.DOMStoragePeerManager
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  signalItemAdded(Lcom/facebook/stetho/inspector/protocol/module/DOMStorage$StorageId;Ljava/lang/String;Ljava/lang/String;)V = SignalItemAdded(Com.Facebook.Stetho.Inspector.Protocol.Module.DOMStorage.StorageId, string, string)
  signalItemRemoved(Lcom/facebook/stetho/inspector/protocol/module/DOMStorage$StorageId;Ljava/lang/String;)V = SignalItemRemoved(Com.Facebook.Stetho.Inspector.Protocol.Module.DOMStorage.StorageId, string)
  signalItemUpdated(Lcom/facebook/stetho/inspector/protocol/module/DOMStorage$StorageId;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = SignalItemUpdated(Com.Facebook.Stetho.Inspector.Protocol.Module.DOMStorage.StorageId, string, string, string)
com/facebook/stetho/inspector/domstorage/SharedPreferencesHelper = Com.Facebook.Stetho.Inspector.Domstorage.SharedPreferencesHelper
  getSharedPreferenceTags(Landroid/content/Context;)Ljava/util/List; = GetSharedPreferenceTags(Android.Content.Context)
  valueFromString(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; = ValueFromString(string, Java.Lang.Object)
  valueToString(Ljava/lang/Object;)Ljava/lang/String; = ValueToString(Java.Lang.Object)
com/facebook/stetho/inspector/elements/android/ActivityTracker = Com.Facebook.Stetho.Inspector.Elements.Android.ActivityTracker
  <init>()V = .ctor()
  getActivitiesView()Ljava/util/List; = ActivitiesView
  add(Landroid/app/Activity;)V = Add(Android.App.Activity)
  beginTrackingIfPossible(Landroid/app/Application;)Z = BeginTrackingIfPossible(Android.App.Application)
  endTracking()Z = EndTracking()
  get()Lcom/facebook/stetho/inspector/elements/android/ActivityTracker; = Get()
  registerListener(Lcom/facebook/stetho/inspector/elements/android/ActivityTracker$Listener;)V = RegisterListener(Com.Facebook.Stetho.Inspector.Elements.Android.ActivityTracker.IListener)
  remove(Landroid/app/Activity;)V = Remove(Android.App.Activity)
  tryGetTopActivity()Landroid/app/Activity; = TryGetTopActivity()
  unregisterListener(Lcom/facebook/stetho/inspector/elements/android/ActivityTracker$Listener;)V = UnregisterListener(Com.Facebook.Stetho.Inspector.Elements.Android.ActivityTracker.IListener)
com/facebook/stetho/inspector/elements/android/AndroidDocumentConstants = Com.Facebook.Stetho.Inspector.Elements.Android.IAndroidDocumentConstants
  MIN_API_LEVEL = MinApiLevel
com/facebook/stetho/inspector/elements/android/AndroidDocumentProviderFactory = Com.Facebook.Stetho.Inspector.Elements.Android.AndroidDocumentProviderFactory
  <init>(Landroid/app/Application;)V = .ctor(Android.App.Application)
  checkThreadAccess()Z = CheckThreadAccess()
  create()Lcom/facebook/stetho/inspector/elements/DocumentProvider; = Create()
  postAndWait(Lcom/facebook/stetho/common/UncheckedCallable;)Ljava/lang/Object; = PostAndWait(Com.Facebook.Stetho.Common.IUncheckedCallable)
  postAndWait(Ljava/lang/Runnable;)V = PostAndWait(Java.Lang.IRunnable)
  postDelayed(Ljava/lang/Runnable;J)V = PostDelayed(Java.Lang.IRunnable, long)
  removeCallbacks(Ljava/lang/Runnable;)V = RemoveCallbacks(Java.Lang.IRunnable)
  verifyThreadAccess()V = VerifyThreadAccess()
com/facebook/stetho/inspector/elements/android/MethodInvoker = Com.Facebook.Stetho.Inspector.Elements.Android.MethodInvoker
  <init>()V = .ctor()
  invoke(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V = Invoke(Java.Lang.Object, string, string)
com/facebook/stetho/inspector/elements/AttributeAccumulator = Com.Facebook.Stetho.Inspector.Elements.IAttributeAccumulator
  store(Ljava/lang/String;Ljava/lang/String;)V = Store(string, string)
com/facebook/stetho/inspector/elements/DescriptorMap = Com.Facebook.Stetho.Inspector.Elements.DescriptorMap
  <init>()V = .ctor()
  beginInit()Lcom/facebook/stetho/inspector/elements/DescriptorMap; = BeginInit()
  endInit()Lcom/facebook/stetho/inspector/elements/DescriptorMap; = EndInit()
com/facebook/stetho/inspector/elements/Document = Com.Facebook.Stetho.Inspector.Elements.Document
  <init>(Lcom/facebook/stetho/inspector/elements/DocumentProviderFactory;)V = .ctor(Com.Facebook.Stetho.Inspector.Elements.IDocumentProviderFactory)
  getDocumentView()Lcom/facebook/stetho/inspector/elements/DocumentView; = DocumentView
  getRootElement()Ljava/lang/Object; = RootElement
  addRef()V = AddRef()
  addUpdateListener(Lcom/facebook/stetho/inspector/elements/Document$UpdateListener;)V = AddUpdateListener(Com.Facebook.Stetho.Inspector.Elements.Document.IUpdateListener)
  findMatchingElements(Ljava/lang/String;Lcom/facebook/stetho/common/Accumulator;)V = FindMatchingElements(string, Com.Facebook.Stetho.Common.IAccumulator)
  getElementAccessibilityStyles(Ljava/lang/Object;Lcom/facebook/stetho/inspector/elements/StyleAccumulator;)V = GetElementAccessibilityStyles(Java.Lang.Object, Com.Facebook.Stetho.Inspector.Elements.IStyleAccumulator)
  getElementForNodeId(I)Ljava/lang/Object; = GetElementForNodeId(int)
  getElementStyles(Ljava/lang/Object;Lcom/facebook/stetho/inspector/elements/StyleAccumulator;)V = GetElementStyles(Java.Lang.Object, Com.Facebook.Stetho.Inspector.Elements.IStyleAccumulator)
  getNodeDescriptor(Ljava/lang/Object;)Lcom/facebook/stetho/inspector/elements/NodeDescriptor; = GetNodeDescriptor(Java.Lang.Object)
  getNodeIdForElement(Ljava/lang/Object;)Ljava/lang/Integer; = GetNodeIdForElement(Java.Lang.Object)
  hideHighlight()V = HideHighlight()
  highlightElement(Ljava/lang/Object;I)V = HighlightElement(Java.Lang.Object, int)
  release()V = Release()
  removeUpdateListener(Lcom/facebook/stetho/inspector/elements/Document$UpdateListener;)V = RemoveUpdateListener(Com.Facebook.Stetho.Inspector.Elements.Document.IUpdateListener)
  setAttributesAsText(Ljava/lang/Object;Ljava/lang/String;)V = SetAttributesAsText(Java.Lang.Object, string)
  setInspectModeEnabled(Z)V = SetInspectModeEnabled(bool)
com/facebook/stetho/inspector/elements/DocumentProvider = Com.Facebook.Stetho.Inspector.Elements.IDocumentProvider
  getRootElement()Ljava/lang/Object; = RootElement
  dispose()V = Dispose()
  getNodeDescriptor(Ljava/lang/Object;)Lcom/facebook/stetho/inspector/elements/NodeDescriptor; = GetNodeDescriptor(Java.Lang.Object)
  hideHighlight()V = HideHighlight()
  highlightElement(Ljava/lang/Object;I)V = HighlightElement(Java.Lang.Object, int)
  setAttributesAsText(Ljava/lang/Object;Ljava/lang/String;)V = SetAttributesAsText(Java.Lang.Object, string)
  setInspectModeEnabled(Z)V = SetInspectModeEnabled(bool)
  setListener(Lcom/facebook/stetho/inspector/elements/DocumentProviderListener;)V = SetListener(Com.Facebook.Stetho.Inspector.Elements.IDocumentProviderListener)
com/facebook/stetho/inspector/elements/DocumentProviderFactory = Com.Facebook.Stetho.Inspector.Elements.IDocumentProviderFactory
  create()Lcom/facebook/stetho/inspector/elements/DocumentProvider; = Create()
com/facebook/stetho/inspector/elements/DocumentProviderListener = Com.Facebook.Stetho.Inspector.Elements.IDocumentProviderListener
  onAttributeModified(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V = OnAttributeModified(Java.Lang.Object, string, string)
  onAttributeRemoved(Ljava/lang/Object;Ljava/lang/String;)V = OnAttributeRemoved(Java.Lang.Object, string)
  onInspectRequested(Ljava/lang/Object;)V = OnInspectRequested(Java.Lang.Object)
  onPossiblyChanged()V = OnPossiblyChanged()
com/facebook/stetho/inspector/elements/DocumentView = Com.Facebook.Stetho.Inspector.Elements.IDocumentView
  getRootElement()Ljava/lang/Object; = RootElement
  getElementInfo(Ljava/lang/Object;)Lcom/facebook/stetho/inspector/elements/ElementInfo; = GetElementInfo(Java.Lang.Object)
com/facebook/stetho/inspector/elements/ElementInfo = Com.Facebook.Stetho.Inspector.Elements.ElementInfo
  children = Children
  element = Element
  parentElement = ParentElement
com/facebook/stetho/inspector/elements/NodeDescriptor = Com.Facebook.Stetho.Inspector.Elements.INodeDescriptor
  getAccessibilityStyles(Ljava/lang/Object;Lcom/facebook/stetho/inspector/elements/StyleAccumulator;)V = GetAccessibilityStyles(Java.Lang.Object, Com.Facebook.Stetho.Inspector.Elements.IStyleAccumulator)
  getAttributes(Ljava/lang/Object;Lcom/facebook/stetho/inspector/elements/AttributeAccumulator;)V = GetAttributes(Java.Lang.Object, Com.Facebook.Stetho.Inspector.Elements.IAttributeAccumulator)
  getChildren(Ljava/lang/Object;Lcom/facebook/stetho/common/Accumulator;)V = GetChildren(Java.Lang.Object, Com.Facebook.Stetho.Common.IAccumulator)
  getLocalName(Ljava/lang/Object;)Ljava/lang/String; = GetLocalName(Java.Lang.Object)
  getNodeName(Ljava/lang/Object;)Ljava/lang/String; = GetNodeName(Java.Lang.Object)
  getNodeType(Ljava/lang/Object;)Lcom/facebook/stetho/inspector/elements/NodeType; = GetNodeType(Java.Lang.Object)
  getNodeValue(Ljava/lang/Object;)Ljava/lang/String; = GetNodeValue(Java.Lang.Object)
  getStyles(Ljava/lang/Object;Lcom/facebook/stetho/inspector/elements/StyleAccumulator;)V = GetStyles(Java.Lang.Object, Com.Facebook.Stetho.Inspector.Elements.IStyleAccumulator)
  hook(Ljava/lang/Object;)V = Hook(Java.Lang.Object)
  setAttributesAsText(Ljava/lang/Object;Ljava/lang/String;)V = SetAttributesAsText(Java.Lang.Object, string)
  unhook(Ljava/lang/Object;)V = Unhook(Java.Lang.Object)
com/facebook/stetho/inspector/elements/NodeType = Com.Facebook.Stetho.Inspector.Elements.NodeType
  COMMENT_NODE = CommentNode
  DOCUMENT_FRAGMENT_NODE = DocumentFragmentNode
  DOCUMENT_NODE = DocumentNode
  DOCUMENT_TYPE_NODE = DocumentTypeNode
  ELEMENT_NODE = ElementNode
  PROCESSING_INSTRUCTION_NODE = ProcessingInstructionNode
  TEXT_NODE = TextNode
  getProtocolValue()I = ProtocolValue
  valueOf(Ljava/lang/String;)Lcom/facebook/stetho/inspector/elements/NodeType; = ValueOf(string)
  values()[Lcom/facebook/stetho/inspector/elements/NodeType; = Values()
com/facebook/stetho/inspector/elements/Origin = Com.Facebook.Stetho.Inspector.Elements.Origin
  INJECTED = Injected
  INSPECTOR = Inspector
  REGULAR = Regular
  USER_AGENT = UserAgent
  getProtocolValue()Ljava/lang/String; = ProtocolValue
  valueOf(Ljava/lang/String;)Lcom/facebook/stetho/inspector/elements/Origin; = ValueOf(string)
  values()[Lcom/facebook/stetho/inspector/elements/Origin; = Values()
com/facebook/stetho/inspector/elements/ShadowDocument = Com.Facebook.Stetho.Inspector.Elements.ShadowDocument
  <init>(Ljava/lang/Object;)V = .ctor(Java.Lang.Object)
  getRootElement()Ljava/lang/Object; = RootElement
  beginUpdate()Lcom/facebook/stetho/inspector/elements/ShadowDocument$UpdateBuilder; = BeginUpdate()
  getElementInfo(Ljava/lang/Object;)Lcom/facebook/stetho/inspector/elements/ElementInfo; = GetElementInfo(Java.Lang.Object)
com/facebook/stetho/inspector/elements/StyleAccumulator = Com.Facebook.Stetho.Inspector.Elements.IStyleAccumulator
  store(Ljava/lang/String;Ljava/lang/String;Z)V = Store(string, string, bool)
com/facebook/stetho/inspector/helper/ChromePeerManager = Com.Facebook.Stetho.Inspector.Helper.ChromePeerManager
  <init>()V = .ctor()
  hasRegisteredPeers()Z = HasRegisteredPeers
  addPeer(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;)Z = AddPeer(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer)
  invokeMethodOnPeers(Ljava/lang/String;Ljava/lang/Object;Lcom/facebook/stetho/inspector/jsonrpc/PendingRequestCallback;)V = InvokeMethodOnPeers(string, Java.Lang.Object, Com.Facebook.Stetho.Inspector.Jsonrpc.IPendingRequestCallback)
  removePeer(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;)V = RemovePeer(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer)
  sendNotificationToPeers(Ljava/lang/String;Ljava/lang/Object;)V = SendNotificationToPeers(string, Java.Lang.Object)
  setListener(Lcom/facebook/stetho/inspector/helper/PeerRegistrationListener;)V = SetListener(Com.Facebook.Stetho.Inspector.Helper.IPeerRegistrationListener)
com/facebook/stetho/inspector/helper/IntegerFormatter = Com.Facebook.Stetho.Inspector.Helper.IntegerFormatter
  getInstance()Lcom/facebook/stetho/inspector/helper/IntegerFormatter; = Instance
  format(Ljava/lang/Integer;Landroid/view/ViewDebug$ExportedProperty;)Ljava/lang/String; = Format(Java.Lang.Integer, Android.Views.ViewDebug.ExportedProperty)
com/facebook/stetho/inspector/helper/ObjectIdMapper = Com.Facebook.Stetho.Inspector.Helper.ObjectIdMapper
  <init>()V = .ctor()
  mSync = MSync
  clear()V = Clear()
  containsId(I)Z = ContainsId(int)
  containsObject(Ljava/lang/Object;)Z = ContainsObject(Java.Lang.Object)
  getIdForObject(Ljava/lang/Object;)Ljava/lang/Integer; = GetIdForObject(Java.Lang.Object)
  getObjectForId(I)Ljava/lang/Object; = GetObjectForId(int)
  onMapped(Ljava/lang/Object;I)V = OnMapped(Java.Lang.Object, int)
  onUnmapped(Ljava/lang/Object;I)V = OnUnmapped(Java.Lang.Object, int)
  putObject(Ljava/lang/Object;)I = PutObject(Java.Lang.Object)
  removeObject(Ljava/lang/Object;)Ljava/lang/Integer; = RemoveObject(Java.Lang.Object)
  removeObjectById(I)Ljava/lang/Object; = RemoveObjectById(int)
  size()I = Size()
com/facebook/stetho/inspector/helper/PeerRegistrationListener = Com.Facebook.Stetho.Inspector.Helper.IPeerRegistrationListener
  onPeerRegistered(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;)V = OnPeerRegistered(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer)
  onPeerUnregistered(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;)V = OnPeerUnregistered(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer)
com/facebook/stetho/inspector/helper/PeersRegisteredListener = Com.Facebook.Stetho.Inspector.Helper.PeersRegisteredListener
  <init>()V = .ctor()
  onFirstPeerRegistered()V = OnFirstPeerRegistered()
  onLastPeerUnregistered()V = OnLastPeerUnregistered()
  onPeerAdded(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;)V = OnPeerAdded(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer)
  onPeerRegistered(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;)V = OnPeerRegistered(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer)
  onPeerRemoved(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;)V = OnPeerRemoved(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer)
  onPeerUnregistered(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;)V = OnPeerUnregistered(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer)
com/facebook/stetho/inspector/helper/ThreadBoundProxy = Com.Facebook.Stetho.Inspector.Helper.ThreadBoundProxy
  <init>(Lcom/facebook/stetho/common/ThreadBound;)V = .ctor(Com.Facebook.Stetho.Common.IThreadBound)
  checkThreadAccess()Z = CheckThreadAccess()
  postAndWait(Lcom/facebook/stetho/common/UncheckedCallable;)Ljava/lang/Object; = PostAndWait(Com.Facebook.Stetho.Common.IUncheckedCallable)
  postAndWait(Ljava/lang/Runnable;)V = PostAndWait(Java.Lang.IRunnable)
  postDelayed(Ljava/lang/Runnable;J)V = PostDelayed(Java.Lang.IRunnable, long)
  removeCallbacks(Ljava/lang/Runnable;)V = RemoveCallbacks(Java.Lang.IRunnable)
  verifyThreadAccess()V = VerifyThreadAccess()
com/facebook/stetho/inspector/jsonrpc/DisconnectReceiver = Com.Facebook.Stetho.Inspector.Jsonrpc.IDisconnectReceiver
  onDisconnect()V = OnDisconnect()
com/facebook/stetho/inspector/jsonrpc/JsonRpcException = Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcException
  <init>(Lcom/facebook/stetho/inspector/jsonrpc/protocol/JsonRpcError;)V = .ctor(Com.Facebook.Stetho.Inspector.Jsonrpc.Protocol.JsonRpcError)
  getErrorMessage()Lcom/facebook/stetho/inspector/jsonrpc/protocol/JsonRpcError; = ErrorMessage
com/facebook/stetho/inspector/jsonrpc/JsonRpcPeer = Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer
  <init>(Lcom/facebook/stetho/json/ObjectMapper;Lcom/facebook/stetho/websocket/SimpleSession;)V = .ctor(Com.Facebook.Stetho.Json.ObjectMapper, Com.Facebook.Stetho.Websocket.ISimpleSession)
  getWebSocket()Lcom/facebook/stetho/websocket/SimpleSession; = WebSocket
  getAndRemovePendingRequest(J)Lcom/facebook/stetho/inspector/jsonrpc/PendingRequest; = GetAndRemovePendingRequest(long)
  invokeDisconnectReceivers()V = InvokeDisconnectReceivers()
  invokeMethod(Ljava/lang/String;Ljava/lang/Object;Lcom/facebook/stetho/inspector/jsonrpc/PendingRequestCallback;)V = InvokeMethod(string, Java.Lang.Object, Com.Facebook.Stetho.Inspector.Jsonrpc.IPendingRequestCallback)
  registerDisconnectReceiver(Lcom/facebook/stetho/inspector/jsonrpc/DisconnectReceiver;)V = RegisterDisconnectReceiver(Com.Facebook.Stetho.Inspector.Jsonrpc.IDisconnectReceiver)
  unregisterDisconnectReceiver(Lcom/facebook/stetho/inspector/jsonrpc/DisconnectReceiver;)V = UnregisterDisconnectReceiver(Com.Facebook.Stetho.Inspector.Jsonrpc.IDisconnectReceiver)
com/facebook/stetho/inspector/jsonrpc/JsonRpcResult = Com.Facebook.Stetho.Inspector.Jsonrpc.IJsonRpcResult
com/facebook/stetho/inspector/jsonrpc/PendingRequest = Com.Facebook.Stetho.Inspector.Jsonrpc.PendingRequest
  <init>(JLcom/facebook/stetho/inspector/jsonrpc/PendingRequestCallback;)V = .ctor(long, Com.Facebook.Stetho.Inspector.Jsonrpc.IPendingRequestCallback)
  callback = Callback
  requestId = RequestId
com/facebook/stetho/inspector/jsonrpc/PendingRequestCallback = Com.Facebook.Stetho.Inspector.Jsonrpc.IPendingRequestCallback
  onResponse(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lcom/facebook/stetho/inspector/jsonrpc/protocol/JsonRpcResponse;)V = OnResponse(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Com.Facebook.Stetho.Inspector.Jsonrpc.Protocol.JsonRpcResponse)
com/facebook/stetho/inspector/jsonrpc/protocol/EmptyResult = Com.Facebook.Stetho.Inspector.Jsonrpc.Protocol.EmptyResult
  <init>()V = .ctor()
com/facebook/stetho/inspector/jsonrpc/protocol/JsonRpcError = Com.Facebook.Stetho.Inspector.Jsonrpc.Protocol.JsonRpcError
  <init>()V = .ctor()
  <init>(Lcom/facebook/stetho/inspector/jsonrpc/protocol/JsonRpcError$ErrorCode;Ljava/lang/String;Lorg/json/JSONObject;)V = .ctor(Com.Facebook.Stetho.Inspector.Jsonrpc.Protocol.JsonRpcError.ErrorCode, string, Org.Json.JSONObject)
  code = Code
  data = Data
  message = Message
com/facebook/stetho/inspector/jsonrpc/protocol/JsonRpcEvent = Com.Facebook.Stetho.Inspector.Jsonrpc.Protocol.JsonRpcEvent
  <init>()V = .ctor()
  <init>(Ljava/lang/String;Lorg/json/JSONObject;)V = .ctor(string, Org.Json.JSONObject)
  method = Method
  params = Params
com/facebook/stetho/inspector/jsonrpc/protocol/JsonRpcRequest = Com.Facebook.Stetho.Inspector.Jsonrpc.Protocol.JsonRpcRequest
  <init>()V = .ctor()
  <init>(Ljava/lang/Long;Ljava/lang/String;Lorg/json/JSONObject;)V = .ctor(Java.Lang.Long, string, Org.Json.JSONObject)
  id = Id
  method = Method
  params = Params
com/facebook/stetho/inspector/jsonrpc/protocol/JsonRpcResponse = Com.Facebook.Stetho.Inspector.Jsonrpc.Protocol.JsonRpcResponse
  <init>()V = .ctor()
  error = Error
  id = Id
  result = Result
com/facebook/stetho/inspector/MessageHandlingException = Com.Facebook.Stetho.Inspector.MessageHandlingException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/facebook/stetho/inspector/MethodDispatcher = Com.Facebook.Stetho.Inspector.MethodDispatcher
  <init>(Lcom/facebook/stetho/json/ObjectMapper;Ljava/lang/Iterable;)V = .ctor(Com.Facebook.Stetho.Json.ObjectMapper, Java.Lang.IIterable)
  dispatch(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Ljava/lang/String;Lorg/json/JSONObject;)Lorg/json/JSONObject; = Dispatch(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, string, Org.Json.JSONObject)
com/facebook/stetho/inspector/MismatchedResponseException = Com.Facebook.Stetho.Inspector.MismatchedResponseException
  <init>(J)V = .ctor(long)
  mRequestId = MRequestId
  getRequestId()J = RequestId
com/facebook/stetho/inspector/network/AsyncPrettyPrinter = Com.Facebook.Stetho.Inspector.Network.IAsyncPrettyPrinter
  getPrettifiedType()Lcom/facebook/stetho/inspector/network/PrettyPrinterDisplayType; = PrettifiedType
  printTo(Ljava/io/PrintWriter;Ljava/io/InputStream;)V = PrintTo(Java.IO.PrintWriter, System.IO.Stream)
com/facebook/stetho/inspector/network/AsyncPrettyPrinterFactory = Com.Facebook.Stetho.Inspector.Network.IAsyncPrettyPrinterFactory
  getInstance(Ljava/lang/String;Ljava/lang/String;)Lcom/facebook/stetho/inspector/network/AsyncPrettyPrinter; = GetInstance(string, string)
com/facebook/stetho/inspector/network/AsyncPrettyPrinterInitializer = Com.Facebook.Stetho.Inspector.Network.IAsyncPrettyPrinterInitializer
  populatePrettyPrinters(Lcom/facebook/stetho/inspector/network/AsyncPrettyPrinterRegistry;)V = PopulatePrettyPrinters(Com.Facebook.Stetho.Inspector.Network.AsyncPrettyPrinterRegistry)
com/facebook/stetho/inspector/network/AsyncPrettyPrinterRegistry = Com.Facebook.Stetho.Inspector.Network.AsyncPrettyPrinterRegistry
  <init>()V = .ctor()
  lookup(Ljava/lang/String;)Lcom/facebook/stetho/inspector/network/AsyncPrettyPrinterFactory; = Lookup(string)
  register(Ljava/lang/String;Lcom/facebook/stetho/inspector/network/AsyncPrettyPrinterFactory;)V = Register(string, Com.Facebook.Stetho.Inspector.Network.IAsyncPrettyPrinterFactory)
  unregister(Ljava/lang/String;)Z = Unregister(string)
com/facebook/stetho/inspector/network/DecompressionHelper = Com.Facebook.Stetho.Inspector.Network.DecompressionHelper
  <init>()V = .ctor()
  teeInputWithDecompression(Lcom/facebook/stetho/inspector/network/NetworkPeerManager;Ljava/lang/String;Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/lang/String;Lcom/facebook/stetho/inspector/network/ResponseHandler;)Ljava/io/InputStream; = TeeInputWithDecompression(Com.Facebook.Stetho.Inspector.Network.NetworkPeerManager, string, System.IO.Stream, System.IO.Stream, string, Com.Facebook.Stetho.Inspector.Network.IResponseHandler)
com/facebook/stetho/inspector/network/DefaultResponseHandler = Com.Facebook.Stetho.Inspector.Network.DefaultResponseHandler
  <init>(Lcom/facebook/stetho/inspector/network/NetworkEventReporter;Ljava/lang/String;)V = .ctor(Com.Facebook.Stetho.Inspector.Network.INetworkEventReporter, string)
  onEOF()V = OnEOF()
  onError(Ljava/io/IOException;)V = OnError(Java.IO.IOException)
  onRead(I)V = OnRead(int)
  onReadDecoded(I)V = OnReadDecoded(int)
com/facebook/stetho/inspector/network/DownloadingAsyncPrettyPrinterFactory = Com.Facebook.Stetho.Inspector.Network.DownloadingAsyncPrettyPrinterFactory
  <init>()V = .ctor()
  doPrint(Ljava/io/PrintWriter;Ljava/io/InputStream;Ljava/lang/String;)V = DoPrint(Java.IO.PrintWriter, System.IO.Stream, string)
  getInstance(Ljava/lang/String;Ljava/lang/String;)Lcom/facebook/stetho/inspector/network/AsyncPrettyPrinter; = GetInstance(string, string)
  matchAndParseHeader(Ljava/lang/String;Ljava/lang/String;)Lcom/facebook/stetho/inspector/network/DownloadingAsyncPrettyPrinterFactory$MatchResult; = MatchAndParseHeader(string, string)
com/facebook/stetho/inspector/network/MimeMatcher = Com.Facebook.Stetho.Inspector.Network.MimeMatcher
  <init>()V = .ctor()
  addRule(Ljava/lang/String;Ljava/lang/Object;)V = AddRule(string, Java.Lang.Object)
  clear()V = Clear()
  match(Ljava/lang/String;)Ljava/lang/Object; = Match(string)
com/facebook/stetho/inspector/network/NetworkEventReporter = Com.Facebook.Stetho.Inspector.Network.INetworkEventReporter
  isEnabled()Z = IsEnabled
  dataReceived(Ljava/lang/String;II)V = DataReceived(string, int, int)
  dataSent(Ljava/lang/String;II)V = DataSent(string, int, int)
  httpExchangeFailed(Ljava/lang/String;Ljava/lang/String;)V = HttpExchangeFailed(string, string)
  interpretResponseStream(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Lcom/facebook/stetho/inspector/network/ResponseHandler;)Ljava/io/InputStream; = InterpretResponseStream(string, string, string, System.IO.Stream, Com.Facebook.Stetho.Inspector.Network.IResponseHandler)
  requestWillBeSent(Lcom/facebook/stetho/inspector/network/NetworkEventReporter$InspectorRequest;)V = RequestWillBeSent(Com.Facebook.Stetho.Inspector.Network.INetworkEventReporterInspectorRequest)
  responseHeadersReceived(Lcom/facebook/stetho/inspector/network/NetworkEventReporter$InspectorResponse;)V = ResponseHeadersReceived(Com.Facebook.Stetho.Inspector.Network.INetworkEventReporterInspectorResponse)
  responseReadFailed(Ljava/lang/String;Ljava/lang/String;)V = ResponseReadFailed(string, string)
  responseReadFinished(Ljava/lang/String;)V = ResponseReadFinished(string)
com/facebook/stetho/inspector/network/NetworkEventReporterImpl = Com.Facebook.Stetho.Inspector.Network.NetworkEventReporterImpl
  isEnabled()Z = IsEnabled
  dataReceived(Ljava/lang/String;II)V = DataReceived(string, int, int)
  dataSent(Ljava/lang/String;II)V = DataSent(string, int, int)
  get()Lcom/facebook/stetho/inspector/network/NetworkEventReporter; = Get()
  httpExchangeFailed(Ljava/lang/String;Ljava/lang/String;)V = HttpExchangeFailed(string, string)
  interpretResponseStream(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Lcom/facebook/stetho/inspector/network/ResponseHandler;)Ljava/io/InputStream; = InterpretResponseStream(string, string, string, System.IO.Stream, Com.Facebook.Stetho.Inspector.Network.IResponseHandler)
  requestWillBeSent(Lcom/facebook/stetho/inspector/network/NetworkEventReporter$InspectorRequest;)V = RequestWillBeSent(Com.Facebook.Stetho.Inspector.Network.INetworkEventReporterInspectorRequest)
  responseHeadersReceived(Lcom/facebook/stetho/inspector/network/NetworkEventReporter$InspectorResponse;)V = ResponseHeadersReceived(Com.Facebook.Stetho.Inspector.Network.INetworkEventReporterInspectorResponse)
  responseReadFailed(Ljava/lang/String;Ljava/lang/String;)V = ResponseReadFailed(string, string)
  responseReadFinished(Ljava/lang/String;)V = ResponseReadFinished(string)
com/facebook/stetho/inspector/network/NetworkPeerManager = Com.Facebook.Stetho.Inspector.Network.NetworkPeerManager
  <init>(Lcom/facebook/stetho/inspector/network/ResponseBodyFileManager;)V = .ctor(Com.Facebook.Stetho.Inspector.Network.ResponseBodyFileManager)
  getAsyncPrettyPrinterRegistry()Lcom/facebook/stetho/inspector/network/AsyncPrettyPrinterRegistry; = AsyncPrettyPrinterRegistry
  getInstanceOrNull()Lcom/facebook/stetho/inspector/network/NetworkPeerManager; = InstanceOrNull
  getResponseBodyFileManager()Lcom/facebook/stetho/inspector/network/ResponseBodyFileManager; = ResponseBodyFileManager
  getOrCreateInstance(Landroid/content/Context;)Lcom/facebook/stetho/inspector/network/NetworkPeerManager; = GetOrCreateInstance(Android.Content.Context)
  setPrettyPrinterInitializer(Lcom/facebook/stetho/inspector/network/AsyncPrettyPrinterInitializer;)V = SetPrettyPrinterInitializer(Com.Facebook.Stetho.Inspector.Network.IAsyncPrettyPrinterInitializer)
com/facebook/stetho/inspector/network/PrettyPrinterDisplayType = Com.Facebook.Stetho.Inspector.Network.PrettyPrinterDisplayType
  HTML = Html
  JSON = Json
  TEXT = Text
  getResourceType()Lcom/facebook/stetho/inspector/protocol/module/Page$ResourceType; = ResourceType
  valueOf(Ljava/lang/String;)Lcom/facebook/stetho/inspector/network/PrettyPrinterDisplayType; = ValueOf(string)
  values()[Lcom/facebook/stetho/inspector/network/PrettyPrinterDisplayType; = Values()
com/facebook/stetho/inspector/network/RequestBodyHelper = Com.Facebook.Stetho.Inspector.Network.RequestBodyHelper
  <init>(Lcom/facebook/stetho/inspector/network/NetworkEventReporter;Ljava/lang/String;)V = .ctor(Com.Facebook.Stetho.Inspector.Network.INetworkEventReporter, string)
  hasBody()Z = HasBody
  createBodySink(Ljava/lang/String;)Ljava/io/OutputStream; = CreateBodySink(string)
  getDisplayBody()[B = GetDisplayBody()
  reportDataSent()V = ReportDataSent()
com/facebook/stetho/inspector/network/ResourceTypeHelper = Com.Facebook.Stetho.Inspector.Network.ResourceTypeHelper
  <init>()V = .ctor()
  determineResourceType(Ljava/lang/String;)Lcom/facebook/stetho/inspector/protocol/module/Page$ResourceType; = DetermineResourceType(string)
  stripContentExtras(Ljava/lang/String;)Ljava/lang/String; = StripContentExtras(string)
com/facebook/stetho/inspector/network/ResponseBodyData = Com.Facebook.Stetho.Inspector.Network.ResponseBodyData
  <init>()V = .ctor()
  base64Encoded = Base64Encoded
  data = Data
com/facebook/stetho/inspector/network/ResponseBodyFileManager = Com.Facebook.Stetho.Inspector.Network.ResponseBodyFileManager
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  associateAsyncPrettyPrinterWithId(Ljava/lang/String;Lcom/facebook/stetho/inspector/network/AsyncPrettyPrinter;)V = AssociateAsyncPrettyPrinterWithId(string, Com.Facebook.Stetho.Inspector.Network.IAsyncPrettyPrinter)
  cleanupFiles()V = CleanupFiles()
  openResponseBodyFile(Ljava/lang/String;Z)Ljava/io/OutputStream; = OpenResponseBodyFile(string, bool)
  readFile(Ljava/lang/String;)Lcom/facebook/stetho/inspector/network/ResponseBodyData; = ReadFile(string)
com/facebook/stetho/inspector/network/ResponseHandler = Com.Facebook.Stetho.Inspector.Network.IResponseHandler
  onEOF()V = OnEOF()
  onError(Ljava/io/IOException;)V = OnError(Java.IO.IOException)
  onRead(I)V = OnRead(int)
  onReadDecoded(I)V = OnReadDecoded(int)
com/facebook/stetho/inspector/network/ResponseHandlingInputStream = Com.Facebook.Stetho.Inspector.Network.ResponseHandlingInputStream
  TAG = Tag
com/facebook/stetho/inspector/protocol/ChromeDevtoolsDomain = Com.Facebook.Stetho.Inspector.Protocol.IChromeDevtoolsDomain
com/facebook/stetho/inspector/protocol/ChromeDevtoolsMethod = Com.Facebook.Stetho.Inspector.Protocol.IChromeDevtoolsMethod
com/facebook/stetho/inspector/protocol/module/Console = Com.Facebook.Stetho.Inspector.Protocol.Module.Console
  <init>()V = .ctor()
  disable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Disable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  enable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Enable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/CSS = Com.Facebook.Stetho.Inspector.Protocol.Module.CSS
  <init>(Lcom/facebook/stetho/inspector/elements/Document;)V = .ctor(Com.Facebook.Stetho.Inspector.Elements.Document)
  disable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Disable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  enable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Enable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  getComputedStyleForNode(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = GetComputedStyleForNode(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  getMatchedStylesForNode(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = GetMatchedStylesForNode(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/Database = Com.Facebook.Stetho.Inspector.Protocol.Module.Database
  <init>()V = .ctor()
  add(Lcom/facebook/stetho/inspector/protocol/module/Database$DatabaseDriver;)V = Add(Com.Facebook.Stetho.Inspector.Protocol.Module.Database.DatabaseDriver)
  disable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Disable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  enable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Enable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  executeSQL(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = ExecuteSQL(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  getDatabaseTableNames(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = GetDatabaseTableNames(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/DatabaseConstants = Com.Facebook.Stetho.Inspector.Protocol.Module.IDatabaseConstants
  MIN_API_LEVEL = MinApiLevel
com/facebook/stetho/inspector/protocol/module/Debugger = Com.Facebook.Stetho.Inspector.Protocol.Module.Debugger
  <init>()V = .ctor()
  canSetScriptSource(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = CanSetScriptSource(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  disable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Disable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  enable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Enable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  setPauseOnExceptions(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = SetPauseOnExceptions(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/DOM = Com.Facebook.Stetho.Inspector.Protocol.Module.DOM
  <init>(Lcom/facebook/stetho/inspector/elements/Document;)V = .ctor(Com.Facebook.Stetho.Inspector.Elements.Document)
  disable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Disable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  discardSearchResults(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = DiscardSearchResults(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  enable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Enable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  getDocument(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = GetDocument(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  hideHighlight(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = HideHighlight(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  highlightNode(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = HighlightNode(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  setAttributesAsText(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = SetAttributesAsText(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  setInspectModeEnabled(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = SetInspectModeEnabled(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/DOMStorage = Com.Facebook.Stetho.Inspector.Protocol.Module.DOMStorage
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  disable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Disable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  enable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Enable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  getDOMStorageItems(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = GetDOMStorageItems(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  removeDOMStorageItem(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = RemoveDOMStorageItem(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  setDOMStorageItem(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = SetDOMStorageItem(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/HeapProfiler = Com.Facebook.Stetho.Inspector.Protocol.Module.HeapProfiler
  <init>()V = .ctor()
  getProfileHeaders(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = GetProfileHeaders(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/Inspector = Com.Facebook.Stetho.Inspector.Protocol.Module.Inspector
  <init>()V = .ctor()
  disable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Disable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  enable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Enable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/Network = Com.Facebook.Stetho.Inspector.Protocol.Module.Network
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  disable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Disable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  enable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Enable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  getResponseBody(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = GetResponseBody(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  setPrettyPrinterInitializer(Lcom/facebook/stetho/inspector/network/AsyncPrettyPrinterInitializer;)V = SetPrettyPrinterInitializer(Com.Facebook.Stetho.Inspector.Network.IAsyncPrettyPrinterInitializer)
  setUserAgentOverride(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = SetUserAgentOverride(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/Page = Com.Facebook.Stetho.Inspector.Protocol.Module.Page
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  canScreencast(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = CanScreencast(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  clearDeviceOrientationOverride(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = ClearDeviceOrientationOverride(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  clearGeolocationOverride(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = ClearGeolocationOverride(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  disable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Disable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  enable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Enable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  getResourceTree(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = GetResourceTree(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  hasTouchInputs(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = HasTouchInputs(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  screencastFrameAck(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = ScreencastFrameAck(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  setDeviceMetricsOverride(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = SetDeviceMetricsOverride(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  setEmulatedMedia(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = SetEmulatedMedia(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  setShowViewportSizeOnResize(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = SetShowViewportSizeOnResize(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  setTouchEmulationEnabled(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = SetTouchEmulationEnabled(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  startScreencast(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = StartScreencast(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  stopScreencast(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = StopScreencast(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/Profiler = Com.Facebook.Stetho.Inspector.Protocol.Module.Profiler
  <init>()V = .ctor()
  disable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Disable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  enable(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = Enable(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  getProfileHeaders(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = GetProfileHeaders(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  setSamplingInterval(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = SetSamplingInterval(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/Runtime = Com.Facebook.Stetho.Inspector.Protocol.Module.Runtime
  <init>()V = .ctor()
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Lcom/facebook/stetho/inspector/console/RuntimeReplFactory;)V = .ctor(Com.Facebook.Stetho.Inspector.Console.IRuntimeReplFactory)
  evaluate(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = Evaluate(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  getProperties(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = GetProperties(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  mapObject(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Ljava/lang/Object;)I = MapObject(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Java.Lang.Object)
  releaseObject(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = ReleaseObject(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
  releaseObjectGroup(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)V = ReleaseObjectGroup(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/protocol/module/SimpleBooleanResult = Com.Facebook.Stetho.Inspector.Protocol.Module.SimpleBooleanResult
  <init>()V = .ctor()
  <init>(Z)V = .ctor(bool)
  result = Result
com/facebook/stetho/inspector/protocol/module/Worker = Com.Facebook.Stetho.Inspector.Protocol.Module.Worker
  <init>()V = .ctor()
  canInspectWorkers(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lorg/json/JSONObject;)Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcResult; = CanInspectWorkers(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Org.Json.JSONObject)
com/facebook/stetho/inspector/runtime/RhinoDetectingRuntimeReplFactory = Com.Facebook.Stetho.Inspector.Runtime.RhinoDetectingRuntimeReplFactory
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  newInstance()Lcom/facebook/stetho/inspector/console/RuntimeRepl; = NewInstance()
com/facebook/stetho/inspector/screencast/ScreencastDispatcher = Com.Facebook.Stetho.Inspector.Screencast.ScreencastDispatcher
  <init>()V = .ctor()
  startScreencast(Lcom/facebook/stetho/inspector/jsonrpc/JsonRpcPeer;Lcom/facebook/stetho/inspector/protocol/module/Page$StartScreencastRequest;)V = StartScreencast(Com.Facebook.Stetho.Inspector.Jsonrpc.JsonRpcPeer, Com.Facebook.Stetho.Inspector.Protocol.Module.Page.StartScreencastRequest)
  stopScreencast()V = StopScreencast()
com/facebook/stetho/InspectorModulesProvider = Com.Facebook.Stetho.IInspectorModulesProvider
  get()Ljava/lang/Iterable; = Get()
com/facebook/stetho/json/annotation/JsonProperty = Com.Facebook.Stetho.Json.Annotation.IJsonProperty
  required()Z = Required()
com/facebook/stetho/json/annotation/JsonValue = Com.Facebook.Stetho.Json.Annotation.IJsonValue
com/facebook/stetho/json/ObjectMapper = Com.Facebook.Stetho.Json.ObjectMapper
  <init>()V = .ctor()
  convertValue(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object; = ConvertValue(Java.Lang.Object, Java.Lang.Class)
com/facebook/stetho/server/AddressNameHelper = Com.Facebook.Stetho.Server.AddressNameHelper
  <init>()V = .ctor()
  createCustomAddress(Ljava/lang/String;)Ljava/lang/String; = CreateCustomAddress(string)
com/facebook/stetho/server/CompositeInputStream = Com.Facebook.Stetho.Server.CompositeInputStream
  <init>([Ljava/io/InputStream;)V = .ctor(System.IO.Stream[])
  read()I = Read()
com/facebook/stetho/server/http/ExactPathMatcher = Com.Facebook.Stetho.Server.Http.ExactPathMatcher
  <init>(Ljava/lang/String;)V = .ctor(string)
  match(Ljava/lang/String;)Z = Match(string)
com/facebook/stetho/server/http/HandlerRegistry = Com.Facebook.Stetho.Server.Http.HandlerRegistry
  <init>()V = .ctor()
  lookup(Ljava/lang/String;)Lcom/facebook/stetho/server/http/HttpHandler; = Lookup(string)
  register(Lcom/facebook/stetho/server/http/PathMatcher;Lcom/facebook/stetho/server/http/HttpHandler;)V = Register(Com.Facebook.Stetho.Server.Http.IPathMatcher, Com.Facebook.Stetho.Server.Http.IHttpHandler)
  unregister(Lcom/facebook/stetho/server/http/PathMatcher;Lcom/facebook/stetho/server/http/HttpHandler;)Z = Unregister(Com.Facebook.Stetho.Server.Http.IPathMatcher, Com.Facebook.Stetho.Server.Http.IHttpHandler)
com/facebook/stetho/server/http/HttpHandler = Com.Facebook.Stetho.Server.Http.IHttpHandler
  handleRequest(Lcom/facebook/stetho/server/SocketLike;Lcom/facebook/stetho/server/http/LightHttpRequest;Lcom/facebook/stetho/server/http/LightHttpResponse;)Z = HandleRequest(Com.Facebook.Stetho.Server.SocketLike, Com.Facebook.Stetho.Server.Http.LightHttpRequest, Com.Facebook.Stetho.Server.Http.LightHttpResponse)
com/facebook/stetho/server/http/HttpHeaders = Com.Facebook.Stetho.Server.Http.IHttpHeaders
  CONTENT_LENGTH = ContentLength
  CONTENT_TYPE = ContentType
com/facebook/stetho/server/http/HttpStatus = Com.Facebook.Stetho.Server.Http.IHttpStatus
  HTTP_INTERNAL_SERVER_ERROR = HttpInternalServerError
  HTTP_NOT_FOUND = HttpNotFound
  HTTP_NOT_IMPLEMENTED = HttpNotImplemented
  HTTP_OK = HttpOk
  HTTP_SWITCHING_PROTOCOLS = HttpSwitchingProtocols
com/facebook/stetho/server/http/LightHttpBody = Com.Facebook.Stetho.Server.Http.LightHttpBody
  <init>()V = .ctor()
  contentLength()I = ContentLength()
  contentType()Ljava/lang/String; = ContentType()
  create([BLjava/lang/String;)Lcom/facebook/stetho/server/http/LightHttpBody; = Create(byte[], string)
  create(Ljava/lang/String;Ljava/lang/String;)Lcom/facebook/stetho/server/http/LightHttpBody; = Create(string, string)
  writeTo(Ljava/io/OutputStream;)V = WriteTo(System.IO.Stream)
com/facebook/stetho/server/http/LightHttpMessage = Com.Facebook.Stetho.Server.Http.LightHttpMessage
  <init>()V = .ctor()
  headerNames = HeaderNames
  headerValues = HeaderValues
  addHeader(Ljava/lang/String;Ljava/lang/String;)V = AddHeader(string, string)
  getFirstHeaderValue(Ljava/lang/String;)Ljava/lang/String; = GetFirstHeaderValue(string)
  reset()V = Reset()
com/facebook/stetho/server/http/LightHttpRequest = Com.Facebook.Stetho.Server.Http.LightHttpRequest
  <init>()V = .ctor()
  method = Method
  protocol = Protocol
  uri = Uri
com/facebook/stetho/server/http/LightHttpResponse = Com.Facebook.Stetho.Server.Http.LightHttpResponse
  <init>()V = .ctor()
  body = Body
  code = Code
  reasonPhrase = ReasonPhrase
  prepare()V = Prepare()
com/facebook/stetho/server/http/LightHttpServer = Com.Facebook.Stetho.Server.Http.LightHttpServer
  <init>(Lcom/facebook/stetho/server/http/HandlerRegistry;)V = .ctor(Com.Facebook.Stetho.Server.Http.HandlerRegistry)
  serve(Lcom/facebook/stetho/server/SocketLike;)V = Serve(Com.Facebook.Stetho.Server.SocketLike)
  writeResponseMessage(Lcom/facebook/stetho/server/http/LightHttpResponse;Lcom/facebook/stetho/server/http/LightHttpServer$HttpMessageWriter;)V = WriteResponseMessage(Com.Facebook.Stetho.Server.Http.LightHttpResponse, Com.Facebook.Stetho.Server.Http.LightHttpServer.HttpMessageWriter)
com/facebook/stetho/server/http/PathMatcher = Com.Facebook.Stetho.Server.Http.IPathMatcher
  match(Ljava/lang/String;)Z = Match(string)
com/facebook/stetho/server/http/RegexpPathMatcher = Com.Facebook.Stetho.Server.Http.RegexpPathMatcher
  <init>(Ljava/util/regex/Pattern;)V = .ctor(Java.Util.Regex.Pattern)
  match(Ljava/lang/String;)Z = Match(string)
com/facebook/stetho/server/LazySocketHandler = Com.Facebook.Stetho.Server.LazySocketHandler
  <init>(Lcom/facebook/stetho/server/SocketHandlerFactory;)V = .ctor(Com.Facebook.Stetho.Server.ISocketHandlerFactory)
  onAccepted(Landroid/net/LocalSocket;)V = OnAccepted(Android.Net.LocalSocket)
com/facebook/stetho/server/LeakyBufferedInputStream = Com.Facebook.Stetho.Server.LeakyBufferedInputStream
  <init>(Ljava/io/InputStream;I)V = .ctor(System.IO.Stream, int)
  leakBufferAndStream()Ljava/io/InputStream; = LeakBufferAndStream()
com/facebook/stetho/server/LocalSocketServer = Com.Facebook.Stetho.Server.LocalSocketServer
  <init>(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/stetho/server/SocketHandler;)V = .ctor(string, string, Com.Facebook.Stetho.Server.ISocketHandler)
  getName()Ljava/lang/String; = Name
  run()V = Run()
  stop()V = Stop()
com/facebook/stetho/server/PeerAuthorizationException = Com.Facebook.Stetho.Server.PeerAuthorizationException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/facebook/stetho/server/ProtocolDetectingSocketHandler = Com.Facebook.Stetho.Server.ProtocolDetectingSocketHandler
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  addHandler(Lcom/facebook/stetho/server/ProtocolDetectingSocketHandler$MagicMatcher;Lcom/facebook/stetho/server/SocketLikeHandler;)V = AddHandler(Com.Facebook.Stetho.Server.ProtocolDetectingSocketHandler.IMagicMatcher, Com.Facebook.Stetho.Server.ISocketLikeHandler)
  onSecured(Landroid/net/LocalSocket;)V = OnSecured(Android.Net.LocalSocket)
com/facebook/stetho/server/SecureSocketHandler = Com.Facebook.Stetho.Server.SecureSocketHandler
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  onAccepted(Landroid/net/LocalSocket;)V = OnAccepted(Android.Net.LocalSocket)
  onSecured(Landroid/net/LocalSocket;)V = OnSecured(Android.Net.LocalSocket)
com/facebook/stetho/server/ServerManager = Com.Facebook.Stetho.Server.ServerManager
  <init>(Lcom/facebook/stetho/server/LocalSocketServer;)V = .ctor(Com.Facebook.Stetho.Server.LocalSocketServer)
  start()V = Start()
com/facebook/stetho/server/SocketHandler = Com.Facebook.Stetho.Server.ISocketHandler
  onAccepted(Landroid/net/LocalSocket;)V = OnAccepted(Android.Net.LocalSocket)
com/facebook/stetho/server/SocketHandlerFactory = Com.Facebook.Stetho.Server.ISocketHandlerFactory
  create()Lcom/facebook/stetho/server/SocketHandler; = Create()
com/facebook/stetho/server/SocketLike = Com.Facebook.Stetho.Server.SocketLike
  <init>(Landroid/net/LocalSocket;Lcom/facebook/stetho/server/LeakyBufferedInputStream;)V = .ctor(Android.Net.LocalSocket, Com.Facebook.Stetho.Server.LeakyBufferedInputStream)
  <init>(Lcom/facebook/stetho/server/SocketLike;Lcom/facebook/stetho/server/LeakyBufferedInputStream;)V = .ctor(Com.Facebook.Stetho.Server.SocketLike, Com.Facebook.Stetho.Server.LeakyBufferedInputStream)
  getInput()Ljava/io/InputStream; = Input
  getOutput()Ljava/io/OutputStream; = Output
com/facebook/stetho/server/SocketLikeHandler = Com.Facebook.Stetho.Server.ISocketLikeHandler
  onAccepted(Lcom/facebook/stetho/server/SocketLike;)V = OnAccepted(Com.Facebook.Stetho.Server.SocketLike)
com/facebook/stetho/Stetho = Com.Facebook.Stetho.Stetho
  defaultDumperPluginsProvider(Landroid/content/Context;)Lcom/facebook/stetho/DumperPluginsProvider; = DefaultDumperPluginsProvider(Android.Content.Context)
  defaultInspectorModulesProvider(Landroid/content/Context;)Lcom/facebook/stetho/InspectorModulesProvider; = DefaultInspectorModulesProvider(Android.Content.Context)
  initialize(Lcom/facebook/stetho/Stetho$Initializer;)V = Initialize(Com.Facebook.Stetho.Stetho.Initializer)
  initializeWithDefaults(Landroid/content/Context;)V = InitializeWithDefaults(Android.Content.Context)
  newInitializerBuilder(Landroid/content/Context;)Lcom/facebook/stetho/Stetho$InitializerBuilder; = NewInitializerBuilder(Android.Content.Context)
com/facebook/stetho/websocket/CloseCodes = Com.Facebook.Stetho.Websocket.ICloseCodes
  CLOSED_ABNORMALLY = ClosedAbnormally
  NORMAL_CLOSURE = NormalClosure
  PROTOCOL_ERROR = ProtocolError
  UNEXPECTED_CONDITION = UnexpectedCondition
com/facebook/stetho/websocket/SimpleEndpoint = Com.Facebook.Stetho.Websocket.ISimpleEndpoint
  onClose(Lcom/facebook/stetho/websocket/SimpleSession;ILjava/lang/String;)V = OnClose(Com.Facebook.Stetho.Websocket.ISimpleSession, int, string)
  onError(Lcom/facebook/stetho/websocket/SimpleSession;Ljava/lang/Throwable;)V = OnError(Com.Facebook.Stetho.Websocket.ISimpleSession, Java.Lang.Throwable)
  onMessage(Lcom/facebook/stetho/websocket/SimpleSession;[BI)V = OnMessage(Com.Facebook.Stetho.Websocket.ISimpleSession, byte[], int)
  onMessage(Lcom/facebook/stetho/websocket/SimpleSession;Ljava/lang/String;)V = OnMessage(Com.Facebook.Stetho.Websocket.ISimpleSession, string)
  onOpen(Lcom/facebook/stetho/websocket/SimpleSession;)V = OnOpen(Com.Facebook.Stetho.Websocket.ISimpleSession)
com/facebook/stetho/websocket/SimpleSession = Com.Facebook.Stetho.Websocket.ISimpleSession
  isOpen()Z = IsOpen
  close(ILjava/lang/String;)V = Close(int, string)
  sendBinary([B)V = SendBinary(byte[])
  sendText(Ljava/lang/String;)V = SendText(string)
com/facebook/stetho/websocket/WebSocketHandler = Com.Facebook.Stetho.Websocket.WebSocketHandler
  <init>(Lcom/facebook/stetho/websocket/SimpleEndpoint;)V = .ctor(Com.Facebook.Stetho.Websocket.ISimpleEndpoint)
  handleRequest(Lcom/facebook/stetho/server/SocketLike;Lcom/facebook/stetho/server/http/LightHttpRequest;Lcom/facebook/stetho/server/http/LightHttpResponse;)Z = HandleRequest(Com.Facebook.Stetho.Server.SocketLike, Com.Facebook.Stetho.Server.Http.LightHttpRequest, Com.Facebook.Stetho.Server.Http.LightHttpResponse)
